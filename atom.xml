<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Derive</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://derive.cc/"/>
  <updated>2017-08-18T14:09:55.946Z</updated>
  <id>https://derive.cc/</id>
  
  <author>
    <name>zhaowang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>One night in Beijing</title>
    <link href="https://derive.cc/2017/08/18/2017-8-18/"/>
    <id>https://derive.cc/2017/08/18/2017-8-18/</id>
    <published>2017-08-17T16:00:00.000Z</published>
    <updated>2017-08-18T14:09:55.946Z</updated>
    
    <content type="html">&lt;p&gt;来帝都整整一个月了，去了一趟天安门、去了一趟国家财政部看话剧，之后竟再也没有进过城（好想知道markdown支不支持emoji😅）。每天在听领导瞎扯淡的期间，其实也能学到不少东西，增加不少见识，但是要明明白白说到底是些什么，自己也不太清楚。今天在国泰君安开了个户，在8月18这个日子里，我也入驻股市了，纯属试试水吧！准备拿出2000块的¥（少得可怜哦），希望能在股市里利滚利滚利滚利…第一支想买的股票还没想好哦，还有两天可以好好研究一番（局限于实业行业吧）开始期待回福清的生活！妈妈生日快要到了，还没决定到底送什么东西好，纠结？！怕买的东西又不实用，买吃的又太没意思。勤快每一天，がんばって！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;来帝都整整一个月了，去了一趟天安门、去了一趟国家财政部看话剧，之后竟再也没有进过城（好想知道markdown支不支持emoji😅）。每天在听领导瞎扯淡的期间，其实也能学到不少东西，增加不少见识，但是要明明白白说到底是些什么，自己也不太清楚。今天在国泰君安开了个户，在8月1
    
    </summary>
    
      <category term="None" scheme="https://derive.cc/categories/None/"/>
    
    
      <category term="Life" scheme="https://derive.cc/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>My way wrong ? Time will tell !</title>
    <link href="https://derive.cc/2017/06/23/choose/"/>
    <id>https://derive.cc/2017/06/23/choose/</id>
    <published>2017-06-22T16:00:00.000Z</published>
    <updated>2017-08-18T13:43:38.956Z</updated>
    
    <content type="html">&lt;p&gt;四年一瞬，马上到了毕业离校的时间了，人生漫漫路此刻才刚刚启程，进入中核是对是错，大概只有时间才能给自己一个答案。从最开始的深圳拓邦，到最后面试的中铁建，时间线拉的蛮长，offer也拿了几个。最想进入株洲中车，参加宣讲会，三投简历，石沉大海，这大概和最近中车声名鹊起有关吧，加上国企一贯的尿性，能招985绝不要211，牛气！期间也有两个现在看来蛮遗憾的事，第一个是中国地质科学院地球物理地球化学勘查研究所的招聘，当时考虑到地质行业现在整体衰败，再加上要去河北廊坊面试，故没有做考虑。之后又后悔，应该去看看薪酬福利之后再做打算的，本科能有事业编制还是不错的条件。第二则是矿大的考研复试，前后为了复试花了1000多，最后却一场空，心里真是不甘心，矿大眼瞎！就不应该去那面试！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;四年一瞬，马上到了毕业离校的时间了，人生漫漫路此刻才刚刚启程，进入中核是对是错，大概只有时间才能给自己一个答案。从最开始的深圳拓邦，到最后面试的中铁建，时间线拉的蛮长，offer也拿了几个。最想进入株洲中车，参加宣讲会，三投简历，石沉大海，这大概和最近中车声名鹊起有关吧，加
    
    </summary>
    
      <category term="None" scheme="https://derive.cc/categories/None/"/>
    
    
      <category term="Life" scheme="https://derive.cc/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>LabVIEW姿态模拟</title>
    <link href="https://derive.cc/2016/07/09/LabVIEW%E5%A7%BF%E6%80%81%E6%A8%A1%E6%8B%9F/"/>
    <id>https://derive.cc/2016/07/09/LabVIEW姿态模拟/</id>
    <published>2016-07-08T16:00:00.000Z</published>
    <updated>2016-10-20T12:06:53.455Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;NOTE：&lt;/strong&gt;虚拟仪器课程考核中的第六题&lt;br&gt;&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;LabVIEW姿态模拟显示-Syntax&quot;&gt;&lt;a href=&quot;#LabVIEW姿态模拟显示-Syntax&quot; class=&quot;headerlink&quot; title=&quot;LabVIEW姿态模拟显示: Syntax&quot;&gt;&lt;/a&gt;LabVIEW姿态模拟显示: Syntax&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#requirement&quot;&gt;题目及要求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#structure&quot;&gt;程序结构&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;[串口接收]&lt;/li&gt;
&lt;li&gt;[设置旋转]&lt;/li&gt;
&lt;li&gt;[数据存储]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3D&quot;&gt;三维图像设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sketch&quot;&gt;整体示意图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2 id=&quot;requirement&quot;&gt;题目及要求&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用Labview控制前端海洋磁场传感器中的姿态传感器（利用单片机模拟）进行姿态数据的采集与串口传输&lt;/li&gt;
&lt;li&gt;能够实时三维显示当前传感器的姿态，并能进行数据的本地文本文件存储&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2 id=&quot;structure&quot;&gt;程序结构&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;串口接收&lt;br&gt;串口接收部分采用的函数包括&lt;/li&gt;
&lt;li&gt;设置旋转&lt;/li&gt;
&lt;li&gt;数据存储&lt;h3 id=&quot;serial&quot;&gt;串口接收&lt;/h3&gt;

&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;NOTE：&lt;/strong&gt;虚拟仪器课程考核中的第六题&lt;br&gt;&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;LabVIEW姿态模拟显示-Syntax&quot;&gt;&lt;a href=&quot;#LabVIEW姿态模
    
    </summary>
    
      <category term="Measurement" scheme="https://derive.cc/categories/Measurement/"/>
    
    
      <category term="LabVIEW" scheme="https://derive.cc/tags/LabVIEW/"/>
    
  </entry>
  
  <entry>
    <title>英文写作</title>
    <link href="https://derive.cc/2016/06/12/writing/"/>
    <id>https://derive.cc/2016/06/12/writing/</id>
    <published>2016-06-11T16:00:00.000Z</published>
    <updated>2017-03-20T07:20:31.057Z</updated>
    
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;writing&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;center&gt;&lt;img src=&quot;/images/one_line_kangaroo.png&quot; width=&quot;600&quot; height=&quot;400&quot; alt=&quot;drum&quot;&gt;&lt;/center&gt;
&lt;ul&gt;&lt;li class=&quot;here&quot;&gt;As is shown vividly above &lt;br&gt;
	正如上图生动展示的那样
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;In crucial periods of life &lt;br&gt;
在人生关键阶段
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;Cannot be given too much attention or consideration &lt;br&gt;
给与再多关注和考虑也不为过
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;On the contrary ,&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;Only by doing so can we … &lt;br&gt;
只有这样做我们才能…
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;This is to say , &lt;br&gt;
也就是说
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;Stephen Coney once said that there are three constants in life :changes,choice and principles &lt;br&gt;
生命中有三种东西是不变的：变化、选择和原则
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;To do this or to do that is a question &lt;br&gt;
做这个还是做那个，这是个问题
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;…are no exception &lt;br&gt;
…也不例外
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;The pessimistic people only see despair,while the optimistic people see hope in it &lt;br&gt;
悲观的人只看到失望，乐观的人看到希望
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;Laugh till the end &lt;br&gt;
笑到最后
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;Thought-provoking &lt;br&gt;
发人深省的
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;It is advisable for us to … &lt;br&gt;
…是明智之举
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;…goes far beyond doubt &lt;br&gt;
…是毋庸置疑的
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;Up until a few decades ago, … . Now … &lt;br&gt;
直到几十年前… ;现在…
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;Take a broader look at … &lt;br&gt;
把视野放宽点看…
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;As so often , &lt;br&gt;
正如很多时候
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;To be sure ， &lt;br&gt;
诚然，
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;A is to B what C is to D &lt;br&gt;
A之于B正如C之于D
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;The more … ,the more … &lt;br&gt;
The life of a man is the process of trying. The more one tries, the better his life will be. &lt;br&gt;
人的一生就是进行尝试，尝试得越多，生活就越美好 &lt;br&gt;
--Emerson （爱默生）
&lt;/li&gt;
&lt;li class=&quot;here&quot;&gt;The subject of life is making choices. &lt;br&gt;
人生的课题就是选择 &lt;br&gt;
--Sartre ( 萨特 )
&lt;/li&gt;&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;</content>
    
    <summary type="html">
    
      &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;writing&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;center&gt;&lt;img src=&quot;/images/one_line_ka
    
    </summary>
    
      <category term="English" scheme="https://derive.cc/categories/English/"/>
    
    
      <category term="英语" scheme="https://derive.cc/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>HTML标签详解</title>
    <link href="https://derive.cc/2016/05/15/HTML%E6%A0%87%E7%AD%BE%E8%AF%A6%E8%A7%A3/"/>
    <id>https://derive.cc/2016/05/15/HTML标签详解/</id>
    <published>2016-05-14T16:00:00.000Z</published>
    <updated>2017-03-20T07:20:01.859Z</updated>
    
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;head&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;center&gt;&lt;img src=&quot;/images/drum.gif&quot; alt=&quot;drum&quot;&gt;&lt;/center&gt;
		&lt;h2 id=&quot;&amp;lt;!--&amp;gt;&quot;&gt;&amp;lt;!--&amp;gt;&lt;/h2&gt;
		&lt;h3&gt;用法&lt;/h3&gt;
		&lt;code&gt;
		插入代码注释，可注释多行
		&amp;lt;!--这是一段注释。注释不会在浏览器中显示。--&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;!DOCTYPE&amp;gt;&quot;&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/h2&gt;
		&lt;h3&gt;用法&lt;/h3&gt;
		&lt;code&gt;
		&amp;lt;!DOCTYPE&amp;gt; 声明必须是 HTML 文档的第一行，位于 &amp;lt;html&amp;gt; 标签之前。
		&amp;lt;!DOCTYPE&amp;gt; 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。
		&amp;lt;!DOCTYPE html&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;a&amp;gt;&quot;&gt;&amp;lt;a&amp;gt;&lt;/h2&gt;
		&lt;h3&gt;用法&lt;/h3&gt;
		&lt;code&gt;
		&amp;lt;a&amp;gt; 标签定义超链接，用于从一张页面链接到另一张页面。
		&amp;lt;a&amp;gt; 元素最重要的属性是 href 属性，它指示链接的目标。
		&amp;lt;a href=&amp;quod;&quot;https://www.derive.cc&quot;&amp;gt;derive&amp;lt;/a&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;abbr&amp;gt;&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/h2&gt;
		&lt;h3&gt;用法&lt;/h3&gt;
		&lt;code&gt;
		&amp;lt;abbr&amp;gt; 标签指示简称或缩写，比如 &quot;WWW&quot; 或 &quot;NATO&quot;
		&amp;lt;abbr&amp;gt; 标签中使用全局的 title 属性，这样就能够在鼠标指针移动到 &amp;lt;abbr&amp;gt; 元素上时显示出简称/缩写的完整版本
		The &amp;lt;abbr title=&quot;People&#39;s Republic of China&quot;&amp;gt;PRC&amp;lt;/abbr&amp;gt; was founded in 1949.
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;address&amp;gt;&quot;&gt;&amp;lt;address&amp;gt;&lt;/h2&gt;
		&lt;h3&gt;用法&lt;/h3&gt;
		&lt;code&gt;
		&amp;lt;address&amp;gt; 标签定义文档或文章的作者/拥有者的联系信息。
		&amp;lt;address&amp;gt;
		Written by &amp;lt;a href=&quot;mailto:webmaster@example.com&quot;&amp;gt;Donald Duck&amp;lt;/a&amp;gt;.&amp;lt;br&amp;gt;
		Visit us at:&amp;lt;br&amp;gt;
		Example.com&amp;lt;br&amp;gt;
		Box 564, Disneyland&amp;lt;br&amp;gt;
		USA
		&amp;lt;/address&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;area&amp;gt;&quot;&gt;&amp;lt;area&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;area&amp;gt; 标签定义图像映射中的区域（注：图像映射指得是带有可点击区域的图像）。
		area 元素总是嵌套在 &amp;lt;map&amp;gt; 标签中。
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;audio&amp;gt;&quot;&gt;&amp;lt;audio&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;audio&amp;gt; 标签定义声音，比如音乐或其他音频流
		&amp;lt;audio src=&quot;/i/horse.ogg&quot; controls=&quot;controls&quot;&amp;gt;
		Your browser does not support the audio element.
		&amp;lt;/audio&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;b&amp;gt;&quot;&gt;&amp;lt;b&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;b&amp;gt; 标签规定粗体文本
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;base&amp;gt;&quot;&gt;&amp;lt;base&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;base&amp;gt; 标签为页面上的所有链接规定默认地址或默认目标
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;big&amp;gt;;&quot;&gt;&amp;lt;big&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;big&amp;gt; 标签呈现大号字体效果
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;blockquote&amp;gt;&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;blockquote&amp;gt; 标签定义块引用
		&amp;lt;blockquote&amp;gt; 与 &amp;lt;/blockquote&amp;gt; 之间的所有文本都会从常规文本中分离出来，经常会在左、右两边进行缩进（增加外边距），而且有时会使用斜体。也就是说，块引用拥有它们自己的空间。
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;body&amp;gt;&quot;&gt;&amp;lt;body&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;body&amp;gt; 文档主体
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;br/&amp;gt;&quot;&gt;&amp;lt;br/&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;br/&amp;gt; 换行
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;button&amp;gt;&quot;&gt;&amp;lt;button&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;button&amp;gt; 标签定义一个按钮
		在 button 元素内部，您可以放置内容，比如文本或图像。这是该元素与使用 input 元素创建的按钮之间的不同之处。
		&amp;lt;button type=&quot;button&quot;&amp;gt;Click Me!&amp;lt;/button&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;center&amp;gt;&quot;&gt;&amp;lt;center&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;center&amp;gt; 标签包含内容水平居中
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;cite&amp;gt;&quot;&gt;&amp;lt;cite&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;cite&amp;gt; 参考文献的引用
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;code&amp;gt;&quot;&gt;&amp;lt;code&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;code&amp;gt; 程序源码，Courier New 字体（打印机字体）
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;del&amp;gt;&quot;&gt;&amp;lt;del&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;del&amp;gt; &lt;del&gt;已删除文本内容&lt;/del&gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;div&amp;gt;&quot;&gt;&amp;lt;div&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;div&amp;gt; 标签可以把文档分割为独立的、不同的部分，支持style属性
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;embed&amp;gt;&quot;&gt;&amp;lt;embed&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;embed&amp;gt; 定义嵌入内容，支持src、height、width、type
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;figure&amp;gt;&quot;&gt;&amp;lt;figure&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;figure&amp;gt; 标签规定独立的流内容（图像、图表、照片、代码等等）
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;footer&amp;gt;&quot;&gt;&amp;lt;footer&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;footer&amp;gt; 定义页脚内容，可定义多个
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;form&amp;gt;&quot;&gt;&amp;lt;form&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;form&amp;gt; 定义表单内容
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;h1--h6&amp;gt;&quot;&gt;&amp;lt;h1--h6&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;和h1-h6&amp;gt; 定义1~6级标题
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;head&amp;gt;&quot;&gt;&amp;lt;head&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;head&amp;gt; 定义文档头部内容，头部内容容器
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;header&amp;gt;&quot;&gt;&amp;lt;header&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;header&amp;gt; 定义页眉
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;hr&amp;gt;&quot;&gt;&amp;lt;hr&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;hr&amp;gt; 水平分割线
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;html&amp;gt;&quot;&gt;&amp;lt;html&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;html&amp;gt; 定义HTML文档
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;i&amp;gt;&quot;&gt;&amp;lt;i&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;i&amp;gt; 定义斜体文本
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;img&amp;gt;&quot;&gt;&amp;lt;img&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;img&amp;gt; 嵌入图像
		&amp;lt;img src=&quot;image/derive.png&quot; alt=&quot;图像&quot;/&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;ins&amp;gt;&quot;&gt;&amp;lt;ins&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;ins&amp;gt; &lt;ins&gt;新插入文本,与del相反&lt;/ins&gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;li&amp;gt;&quot;&gt;&amp;lt;li&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;li&amp;gt; 标签可用在有序列表 (&amp;lt;ol&amp;gt;) 和无序列表 (&amp;lt;ul&amp;gt;) 中
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;link&amp;gt;&quot;&gt;&amp;lt;link&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;link&amp;gt; 标签最常见的用途是链接样式表
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;mark&amp;gt;&quot;&gt;&amp;lt;mark&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;mark&amp;gt; &lt;mark&gt; 标签定义带有记号的文本&lt;/mark&gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;meta&amp;gt;&quot;&gt;&amp;lt;meta&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;meta&amp;gt; 元素可提供有关页面的元信息（meta-information）,定义于文档头部
		汉字字符编码设定&amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;p&amp;gt;&quot;&gt;&amp;lt;p&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;p&amp;gt; 段落
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;code&amp;gt;&quot;&gt;&amp;lt;code&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;code&amp;gt; 内容包含空格与换行符
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;script&amp;gt;&quot;&gt;&amp;lt;script&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;script&amp;gt; 插入Javascript内容
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;section&amp;gt;&quot;&gt;&amp;lt;section&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;section&amp;gt; 分区段，和div类似
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;small&amp;gt;&quot;&gt;&amp;lt;small&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;small&amp;gt; 小号字体
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;source&amp;gt;&quot;&gt;&amp;lt;source&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;source&amp;gt; 为video、audio等元素定义媒介资源
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;style&amp;gt;&quot;&gt;&amp;lt;style&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;style&amp;gt;  标签用于为 HTML 文档定义样式信息
		在 style 中，您可以规定在浏览器中如何呈现 HTML 文档
		type 属性是必需的，定义 style 元素的内容，唯一可能的值是 &quot;text/css&quot;
		style 元素位于 head 部分中
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;sub&amp;gt;&quot;&gt;&amp;lt;sub&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;sub&amp;gt; 下标文本
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;sup&amp;gt;&quot;&gt;&amp;lt;sup&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;sup&amp;gt; 上标文本
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;table&amp;gt;&quot;&gt;&amp;lt;table&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;table&amp;gt; 标签定义 HTML 表格
		简单的 HTML 表格由 table 元素以及一个或多个 tr、th 或 td 元素组成
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;ul&amp;gt;&quot;&gt;&amp;lt;ul&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;ul&amp;gt; 无序列表
		&lt;/code&gt;
		&lt;h2 id=&quot;&amp;lt;video&amp;gt;&quot;&gt;&amp;lt;video&amp;gt;&lt;/h2&gt;
		&lt;code&gt;
		&amp;lt;vedio&amp;gt; 插入视频&lt;ul&gt;
			&lt;li&gt;autoplay  autoplay  如果出现该属性，则视频在就绪后马上播放&lt;/li&gt;
			&lt;li&gt;controls  controls  如果出现该属性，则向用户显示控件，比如播放按钮&lt;/li&gt;
			&lt;li&gt;height    pixels    设置视频播放器的高度&lt;/li&gt;
			&lt;li&gt;loop      loop      如果出现该属性，则当媒介文件完成播放后再次开始播放&lt;/li&gt;
			&lt;li&gt;muted     muted    规定视频的音频输出应该被静音&lt;/li&gt;
			&lt;li&gt;poster    URL    规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像&lt;/li&gt;
			&lt;li&gt;codeload   codeload   如果出现该属性，则视频在页面加载时进行加载，并预备播放&lt;/li&gt;
			&lt;li&gt;src       url    要播放的视频的 URL&lt;/li&gt;
			&lt;li&gt;width     pixels    设置视频播放器的宽度&lt;/li&gt;&lt;/ul&gt;
			&lt;/code&gt;
		&lt;/body&gt;
	&lt;/html&gt;</content>
    
    <summary type="html">
    
      &lt;!DOCTYPE html&gt;
&lt;html&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;head&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;center&gt;&lt;img src=&quot;/images/drum.gif&quot; alt=&quot;drum&quot;&gt;&lt;/center&gt;
		&lt;h2 id=
    
    </summary>
    
      <category term="Code" scheme="https://derive.cc/categories/Code/"/>
    
    
      <category term="HTML" scheme="https://derive.cc/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Grammar</title>
    <link href="https://derive.cc/2016/05/09/Markdown-%E8%AF%AD%E6%B3%95/"/>
    <id>https://derive.cc/2016/05/09/Markdown-语法/</id>
    <published>2016-05-08T16:00:00.000Z</published>
    <updated>2017-03-20T07:20:22.529Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is Simplified Chinese Edition Document of Markdown Syntax.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/images/one_line_crab.png&quot; alt=&quot;one_line_crab&quot; width=&quot;800&quot; height=&quot;558&quot;&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h1 id=&quot;Markdown-Syntax&quot;&gt;&lt;a href=&quot;#Markdown-Syntax&quot; class=&quot;headerlink&quot; title=&quot;Markdown: Syntax&quot;&gt;&lt;/a&gt;Markdown: Syntax&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#overview&quot;&gt;概述&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#philosophy&quot;&gt;哲学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#html&quot;&gt;行内 HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#autoescape&quot;&gt;特殊字符自动转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#block&quot;&gt;区块元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#p&quot;&gt;段落和换行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#header&quot;&gt;标题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#blockquote&quot;&gt;区块引言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#list&quot;&gt;列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#precode&quot;&gt;程序代码区块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hr&quot;&gt;分隔线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#span&quot;&gt;区段元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#link&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#em&quot;&gt;强调&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#code&quot;&gt;程序代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#img&quot;&gt;图片&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#misc&quot;&gt;其它&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#backslash&quot;&gt;转义字符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#autolink&quot;&gt;自动链接&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;overview&quot;&gt;概述&lt;/h2&gt;

&lt;h3 id=&quot;philosophy&quot;&gt;哲学&lt;/h3&gt;

&lt;p&gt;Markdown 的目标是实现「易读易写」。&lt;/p&gt;
&lt;p&gt;不过最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文档应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setext&lt;/a&gt;、&lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atx&lt;/a&gt;、&lt;a href=&quot;http://textism.com/tools/textile/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Textile&lt;/a&gt;、&lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reStructuredText&lt;/a&gt;、&lt;a href=&quot;http://www.triptico.com/software/grutatxt.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grutatext&lt;/a&gt; 和 &lt;a href=&quot;http://ettext.taint.org/doc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EtText&lt;/a&gt;，然而最大灵感来源其实是纯文本的电子邮件格式。&lt;/p&gt;
&lt;p&gt;因此 Markdown 的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。假如你用过电子邮件，区块引言看起来就真的像是引用一段文字。&lt;/p&gt;
&lt;h3 id=&quot;html&quot;&gt;行内 HTML&lt;/h3&gt;

&lt;p&gt;Markdown 的语法有个主要的目的：用来作为一种网络内容的&lt;em&gt;写作&lt;/em&gt;用语言。&lt;/p&gt;
&lt;p&gt;Markdown 不是要来取代 HTML，甚至也没有要和它相似，它的语法种类不多，只和 HTML 的一部分有关系，重点&lt;em&gt;不是&lt;/em&gt;要创造一种更容易写作 HTML 文档的语法，我认为 HTML 已经很容易写了，Markdown 的重点在于，它能让文档更容易阅读、编写。HTML 是一种&lt;em&gt;发布&lt;/em&gt;的格式，Markdown 是一种&lt;em&gt;编写&lt;/em&gt;的格式，因此，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。&lt;/p&gt;
&lt;p&gt;不在 Markdown 涵盖范围之外的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。&lt;/p&gt;
&lt;p&gt;只有区块元素──比如 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 等标签，必需在前后加上空白，以利与内容区隔。而且这些（元素）的开始与结尾标签，不可以用 tab 或是空白来缩排。Markdown 的产生器有智能判断，可以避免在区块标签前后加上没有必要的 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 标签。&lt;/p&gt;
&lt;p&gt;举例来说，在 Markdown 文档里加上一段 HTML 表格：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is a regular paragraph.

&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Foo&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;

This is another regular paragraph.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;请注意，Markdown 语法在 HTML 区块标签中将不会被进行处理。例如，无法在 HTML 区块内使用 Markdown 形式的&lt;code&gt;*强调*&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;HTML 的区段标签如 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; 则不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用Markdown 格式，而采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的  &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片标示语法。&lt;/p&gt;
&lt;p&gt;HTML 区段标签和区块标签不同，在区段标签的范围内， Markdown 的语法是有效的。&lt;/p&gt;
&lt;h3 id=&quot;autoescape&quot;&gt;特殊字符自动转换&lt;/h3&gt;

&lt;p&gt;在 HTML 文档中，有两个字符需要特殊处理： &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 。 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号用于起始标签，&lt;code&gt;&amp;amp;&lt;/code&gt; 符号则用于标记 HTML 实体，如果只是想要使用这些符号，必须要使用实体的形式，像是 &lt;code&gt;&amp;amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;amp;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; 符号其实很让写作网络文档的人很困扰，如果要输入「AT&amp;amp;T」 ，必须要写成「&lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt;」 ，还得转换网址内的 &lt;code&gt;&amp;amp;&lt;/code&gt; 符号，如果要链接到：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://images.google.com/images?num=30&amp;amp;q=larry+bird
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;必须要把网址转成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://images.google.com/images?num=30&amp;amp;amp;q=larry+bird
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;才能放到链接标签的 &lt;code&gt;href&lt;/code&gt; 属性里。不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。&lt;/p&gt;
&lt;p&gt;Markdown 允许直接使用这些符号，但是要小心转义字符的使用，如果是在HTML 实体中使用 &lt;code&gt;&amp;amp;&lt;/code&gt; 符号的话，它不会被转换，而在其它情形下，它则会被转换成 &lt;code&gt;&amp;amp;amp;&lt;/code&gt;。所以如果要在文档中插入一个著作权的符号，可以这样写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;amp;copy;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 将不会对这段文字做修改，但是如果这样写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AT&amp;amp;T
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 就会将它转为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AT&amp;amp;amp;T
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;类似的状况也会发生在 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号上，因为 Markdown 支持 &lt;a href=&quot;#html&quot;&gt;行内 HTML&lt;/a&gt; ，如果是使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号作为 HTML 标签使用，那 Markdown 也不会对它做任何转换，但是如果是写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;4 &amp;lt; 5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 将会把它转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;4 &amp;amp;lt; 5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不过需要注意的是，code 范围内，不论是行内还是区块， &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 两个符号都&lt;em&gt;一定&lt;/em&gt;会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，要把所有的 &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; 都转换为 HTML 实体，才能在 HTML 文档里面写出 HTML code。）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;block&quot;&gt;区块元素&lt;/h2&gt;


&lt;h3 id=&quot;p&quot;&gt;段落和换行&lt;/h3&gt;

&lt;p&gt;一个段落是由一个以上相连接的行句组成，而一个以上的空行则会切分出不同的段落（空行的定义是显示上看起来像是空行，便会被视为空行。比方说，若某一行只包含空白和 tab，则该行也会被视为空行），一般的段落不需要用空白或断行缩排。&lt;/p&gt;
&lt;p&gt;「一个以上相连接的行句组成」这句话其实暗示了 Markdown 允许段落内的强迫断行，这个特性和其他大部分的 text-to-HTML 格式不一样（包括 MovableType 的「Convert Line Breaks」选项），其它的格式会把每个断行都转成 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 标签。&lt;/p&gt;
&lt;p&gt;如果&lt;em&gt;真的&lt;/em&gt;想要插入 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 标签，在行尾加上两个以上的空白，然后按 enter。&lt;/p&gt;
&lt;p&gt;是的，这确实需要花比较多功夫来插入 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; ，但是「每个换行都转换为 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;」的方法在 Markdown 中并不适合， Markdown 中 email 式的 &lt;a href=&quot;#blockquote&quot;&gt;区块引言&lt;/a&gt; 和多段落的 &lt;a href=&quot;#list&quot;&gt;列表&lt;/a&gt; 在使用换行来排版的时候，不但更好用，还更好阅读。&lt;/p&gt;
&lt;h3 id=&quot;header&quot;&gt;标题&lt;/h3&gt;

&lt;p&gt;Markdown 支持两种标题的语法，&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setext&lt;/a&gt; 和 &lt;a href=&quot;http://www.aaronsw.com/2002/atx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atx&lt;/a&gt; 形式。&lt;/p&gt;
&lt;p&gt;Setext 形式是用底线的形式，利用 &lt;code&gt;=&lt;/code&gt; （一级标题）和 &lt;code&gt;-&lt;/code&gt; （二级标题），例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is an H1
=============

This is an H2
-------------
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;任何数量的 &lt;code&gt;=&lt;/code&gt; 和 &lt;code&gt;-&lt;/code&gt; 都可以有效果。&lt;/p&gt;
&lt;p&gt;Atx 形式则是在行首插入 1 到 6 个 &lt;code&gt;#&lt;/code&gt; ，对应到标题 1 到 6 级，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# This is an H1

## This is an H2

###### This is an H6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以选择性地「关闭」atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，就可以在行尾加上 &lt;code&gt;#&lt;/code&gt;，而行尾的 &lt;code&gt;#&lt;/code&gt; 数量也不用和开头一样（行首的井字数量决定标题的级别）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# This is an H1 #

## This is an H2 ##

### This is an H3 ######
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;blockquote&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;p&gt;Markdown 使用 email 形式的区块引言，如果你很熟悉如何在 email 信件中引用，就知道怎么在 Markdown 文档中建立一个区块引言，那会看起来像是强迫断行，然后在每行的最前面加上 &lt;code&gt;&amp;gt;&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&amp;gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&amp;gt;
&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&amp;gt; id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 也允许只在整个段落的第一行最前面加上 &lt;code&gt;&amp;gt;&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;区块引言可以有级别（例如：引言内的引言），只要根据级别加上不同数量的 &lt;code&gt;&amp;gt;&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;引言的区块内也可以使用其他的 Markdown 语法，包括标题、列表、程序代码区块等：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; ## This is a header.
&amp;gt;
&amp;gt; 1.   This is the first list item.
&amp;gt; 2.   This is the second list item.
&amp;gt;
&amp;gt; Here&amp;apos;s some example code:
&amp;gt;
&amp;gt;     return shell_exec(&amp;quot;echo $input | $markdown_script&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;任何标准的文本编辑器都能简单地建立 email 样式的引言，例如 BBEdit ，可以选择文字后，从菜单中选择&lt;em&gt;增加引言级别&lt;/em&gt;。&lt;/p&gt;
&lt;h3 id=&quot;list&quot;&gt;列表&lt;/h3&gt;

&lt;p&gt;Markdown 支持有序列表和无序列表。&lt;/p&gt;
&lt;p&gt;无序列表使用星号、加号或是减号作为列表标记：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Red
*   Green
*   Blue
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等同于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+   Red
+   Green
+   Blue
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也等同于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-   Red
-   Green
-   Blue
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有序列表则使用数字接着一个英文句点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.  Bird
2.  McHale
3.  Parish
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;很重要的一点是，在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ol&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;McHale&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Parish&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你的列表标记写成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.  Bird
1.  McHale
1.  Parish
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或甚至是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3. Bird
1. McHale
8. Parish
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文档的列表数字和输出的结果相同，或是懒一点，可以完全不用在意数字的正确性。&lt;/p&gt;
&lt;p&gt;如果使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。&lt;/p&gt;
&lt;p&gt;列表项目标记通常是放在最左边，但是其实也可以缩排，最多三个空白，项目标记后面则一定要接着至少一个空白或 tab。&lt;/p&gt;
&lt;p&gt;要让列表看起来更漂亮，可以把内容用固定的缩排整理好：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是如果你很懒，那也不一定需要：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果列表项目间用空行分开， Markdown 会把项目的内容在输出时用 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;br&gt;标签包起来，举例来说：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Bird
*   Magic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Magic&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是这个：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   Bird

*   Magic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Bird&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Magic&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;列表项目可以包含多个段落，每个项目下的段落都必须缩排 4 个空白或是一个 tab ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果每行都有缩排，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&amp;apos;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果要在列表项目内放进引言，那 &lt;code&gt;&amp;gt;&lt;/code&gt; 就需要缩排：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   A list item with a blockquote:

    &amp;gt; This is a blockquote
    &amp;gt; inside a list item.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果要放程序代码区块的话，该区块就需要缩排&lt;em&gt;两次&lt;/em&gt;，也就是 8 个空白或是两个 tab：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*   A list item with a code block:

        &amp;lt;code goes here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然，项目列表很可能会不小心产生，像是下面这样的写法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1986. What a great season.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;换句话说，也就是在行首出现&lt;em&gt;数字-句点-空白&lt;/em&gt;，要避免这样的状况，可以在句点前面加上反斜杠。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1986\. What a great season.
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;precode&quot;&gt;程序代码区块&lt;/h3&gt;

&lt;p&gt;和程序相关的写作或是标签语言原始代码通常会有已经排版好的程序代码区块，通常这些区块我们并不希望它以一般段落文档的方式去排版，而是照原来的样子显示，Markdown 会用 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 标签来把程序代码区块包起来。&lt;/p&gt;
&lt;p&gt;要在 Markdown 中建立程序代码区块很简单，只要简单地缩排 4 个空白或是 1 个 tab 就可以，例如，下面的输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is a normal paragraph:

    This is a code block.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 会转换成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is a normal paragraph:&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;This is a code block.
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个每行一级的缩排（4 个空白或是 1 个 tab），都会被移除，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Here is an example of AppleScript:

    tell application &amp;quot;Foo&amp;quot;
        beep
    end tell
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Here is an example of AppleScript:&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;tell application &amp;quot;Foo&amp;quot;
    beep
end tell
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一个程序代码区块会一直持续到没有缩排的那一行（或是文档结尾）。&lt;/p&gt;
&lt;p&gt;在程序代码区块里面， &lt;code&gt;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;&lt;/code&gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始代码，只需要复制贴上，再加上缩排就可以了，剩下的 Markdown 都会帮你处理，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;footer&amp;quot;&amp;gt;
    &amp;amp;copy; 2004 Foo Corporation
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&amp;amp;lt;div class=&amp;quot;footer&amp;quot;&amp;amp;gt;
    &amp;amp;amp;copy; 2004 Foo Corporation
&amp;amp;lt;/div&amp;amp;gt;
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文档。&lt;/p&gt;
&lt;h3 id=&quot;hr&quot;&gt;分隔线&lt;/h3&gt;

&lt;p&gt;你可以在一行中用三个或以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号中间插入空白。下面每种写法都可以建立分隔线：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* * *

***

*****

- - -

---------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;span&quot;&gt;区段元素&lt;/h2&gt;

&lt;h3 id=&quot;link&quot;&gt;链接&lt;/h3&gt;

&lt;p&gt;Markdown 支持两种形式的链接语法： &lt;em&gt;行内&lt;/em&gt;和&lt;em&gt;参考&lt;/em&gt;两种形式。&lt;/p&gt;
&lt;p&gt;不管是哪一种，链接的文字都是用 [方括号] 来标记。&lt;/p&gt;
&lt;p&gt;要建立一个行内形式的链接，只要在方块括号后面马上接着括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is [an example](http://example.com/ &amp;quot;Title&amp;quot;) inline link.

[This link](http://example.net/) has no title attribute.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is &amp;lt;a href=&amp;quot;http://example.com/&amp;quot; title=&amp;quot;Title&amp;quot;&amp;gt;
an example&amp;lt;/a&amp;gt; inline link.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://example.net/&amp;quot;&amp;gt;This link&amp;lt;/a&amp;gt; has no
title attribute.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是要链接到同样主机的资源，可以使用相对路径：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;See my [About](/about/) page for details.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考形式的链接使用另外一个方括号接在链接文字的括号后面，而在第二个方括号里面要填入用以辨识链接的标签：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is [an example][id] reference-style link.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也可以选择性地在两个方括号中间加上空白：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is [an example] [id] reference-style link.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着，在文档的任意处，可以把这个标签的链接内容定义出来：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: http://example.com/  &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;链接定义的形式为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方括号，里面输入链接的辨识用标签&lt;/li&gt;
&lt;li&gt;接着一个冒号&lt;/li&gt;
&lt;li&gt;接着一个以上的空白或 tab&lt;/li&gt;
&lt;li&gt;接着链接的网址&lt;/li&gt;
&lt;li&gt;选择性地接着 title 内容，可以用单引号、双引号或是括号包着&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面这三种链接的定义都是相同：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[foo]: http://example.com/  &amp;quot;Optional Title Here&amp;quot;
[foo]: http://example.com/  &amp;apos;Optional Title Here&amp;apos;
[foo]: http://example.com/  (Optional Title Here)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;请注意：&lt;/strong&gt;有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。&lt;/p&gt;
&lt;p&gt;链接网址也可以用方括号包起来：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: &amp;lt;http://example.com/&amp;gt;  &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以把 title 属性放到下一行，也可以加一些缩排，网址太长的话，这样会比较好看：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: http://example.com/longish/path/to/resource/here
    &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;网址定义只有在产生链接的时候用到，并不会直接出现在文档之中。&lt;/p&gt;
&lt;p&gt;链接辨识标签可以有字母、数字、空白和标点符号，但是并&lt;em&gt;不&lt;/em&gt;区分大小写，因此下面两个链接是一样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[link text][a]
[link text][A]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;默认的链接标签&lt;/em&gt;功能让你可以省略指定链接标签，这种情形下，链接标签和链接文字会视为相同，要用默认链接标签只要在链接文字后面加上一个空的方括号，如果要让 “Google” 链接到 google.com，可以简化成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Google][]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后定义链接内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Google]: http://google.com/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于链接文字可能包含空白，所以这种简化的标签内也可以包含多个文字：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Visit [Daring Fireball][] for more information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后接着定义链接：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Daring Fireball]: http://daringfireball.net/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;链接的定义可以放在文档中的任何一个地方，我比较偏好直接放在链接出现段落的后面，也可以把它放在文档最后面，就像是批注一样。&lt;/p&gt;
&lt;p&gt;下面是一个参考式链接的范例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &amp;quot;Google&amp;quot;
  [2]: http://search.yahoo.com/  &amp;quot;Yahoo Search&amp;quot;
  [3]: http://search.msn.com/    &amp;quot;MSN Search&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果改成用链接名称的方式写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &amp;quot;Google&amp;quot;
  [yahoo]:  http://search.yahoo.com/  &amp;quot;Yahoo Search&amp;quot;
  [msn]:    http://search.msn.com/    &amp;quot;MSN Search&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面两种写法都会产生下面的 HTML。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;I get 10 times more traffic from &amp;lt;a href=&amp;quot;http://google.com/&amp;quot;
title=&amp;quot;Google&amp;quot;&amp;gt;Google&amp;lt;/a&amp;gt; than from
&amp;lt;a href=&amp;quot;http://search.yahoo.com/&amp;quot; title=&amp;quot;Yahoo Search&amp;quot;&amp;gt;Yahoo&amp;lt;/a&amp;gt;
or &amp;lt;a href=&amp;quot;http://search.msn.com/&amp;quot; title=&amp;quot;MSN Search&amp;quot;&amp;gt;MSN&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面是用行内形式写的同样一段内容的 Markdown 文档，提供作为比较之用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I get 10 times more traffic from [Google](http://google.com/ &amp;quot;Google&amp;quot;)
than from [Yahoo](http://search.yahoo.com/ &amp;quot;Yahoo Search&amp;quot;) or
[MSN](http://search.msn.com/ &amp;quot;MSN Search&amp;quot;).
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的链接却会增加到 176 个字符，如果是用纯 HTML 格式来写，会有 234 个字符，在 HTML 格式中，标签比文字还要多。&lt;/p&gt;
&lt;p&gt;使用 Markdown 的参考式链接，可以让文档更像是浏览器最后产生的结果，把一些标记相关的信息移到段落文字之外，这样增加链接，文章的阅读感也不会被打断。&lt;/p&gt;
&lt;h3 id=&quot;em&quot;&gt;强调&lt;/h3&gt;

&lt;p&gt;Markdown 使用星号（&lt;code&gt;*&lt;/code&gt;）和底线（&lt;code&gt;_&lt;/code&gt;）作为标记强调字词的符号，被 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 包围的字词会被转成用 &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标签包围，用两个 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 包起来的话，则会被转成 &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会转成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;em&amp;gt;single asterisks&amp;lt;/em&amp;gt;

&amp;lt;em&amp;gt;single underscores&amp;lt;/em&amp;gt;

&amp;lt;strong&amp;gt;double asterisks&amp;lt;/strong&amp;gt;

&amp;lt;strong&amp;gt;double underscores&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以随便用你喜欢的样式，唯一的限制是，用什么符号开启标签，就要用什么符号结束。&lt;/p&gt;
&lt;p&gt;强调也可以直接差在文字中间：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;un*frigging*believable
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是如果 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;_&lt;/code&gt; 两边都有空白的话，它们就只会被当成普通的符号。&lt;/p&gt;
&lt;p&gt;如果要在文字前后直接插入普通的星号或底线，可以用反斜杠：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\*this text is surrounded by literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;code&quot;&gt;程序代码&lt;/h3&gt;

&lt;p&gt;如果要标记一小段行内程序代码，可以用反引号把它包起来（&lt;code&gt;` &lt;/code&gt;），例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Use the `printf()` function.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Use the &amp;lt;code&amp;gt;printf()&amp;lt;/code&amp;gt; function.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果要在程序代码区段内插入反引号，可以用多个反引号来开启和结束程序代码区段：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;``There is a literal backtick (`) here.``
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这段语法会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;There is a literal backtick (`) here.&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样就可以在区段的一开始就插入反引号：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;A single backtick in a code span: &amp;lt;code&amp;gt;`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;A backtick-delimited string in a code span: &amp;lt;code&amp;gt;`foo`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在程序代码区段内，&lt;code&gt;&amp;amp;&lt;/code&gt; 和方括号都会被转成 HTML 实体，这样会比较容易插入 HTML 原始代码，Markdown 会把下面这段：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please don&amp;apos;t use any `&amp;lt;blink&amp;gt;` tags.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;转为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Please don&amp;apos;t use any &amp;lt;code&amp;gt;&amp;amp;lt;blink&amp;amp;gt;&amp;lt;/code&amp;gt; tags.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也可以这样写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`&amp;amp;#8212;` is the decimal-encoded equivalent of `&amp;amp;mdash;`.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以产生：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;&amp;amp;amp;#8212;&amp;lt;/code&amp;gt; is the decimal-encoded
equivalent of &amp;lt;code&amp;gt;&amp;amp;amp;mdash;&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;img&quot;&gt;图片&lt;/h3&gt;

&lt;p&gt;很明显地，要在纯文本应用中设计一个 「自然」的语法来插入图片是有一定难度的。&lt;/p&gt;
&lt;p&gt;Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： &lt;em&gt;行内&lt;/em&gt;和&lt;em&gt;参考&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;行内图片的语法看起来像是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &amp;quot;Optional title&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;详细叙述如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个惊叹号 &lt;code&gt;!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接着一个方括号，里面放上图片的替换文字&lt;/li&gt;
&lt;li&gt;接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上&lt;br&gt;选择性的 ‘title’ 文字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考式的图片语法则长得像这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![Alt text][id]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;「id」是图片参考的名称，图片参考的定义方式则和链接参考一样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[id]: url/to/image  &amp;quot;Optional title attribute&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到目前为止， Markdown 还没有办法指定图片的宽高，如果需要的话，可以使用普通的 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;misc&quot;&gt;其它&lt;/h2&gt;

&lt;h3 id=&quot;autolink&quot;&gt;自动链接&lt;/h3&gt;

&lt;p&gt;Markdown 支持比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接，链接的文字就和链接位置一样，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;http://example.com/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 会转为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;http://example.com/&amp;quot;&amp;gt;http://example.com/&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;自动的邮件链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以混淆一些不好的信箱地址收集机器人，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;address@example.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 会转成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;amp;#x6D;&amp;amp;#x61;i&amp;amp;#x6C;&amp;amp;#x74;&amp;amp;#x6F;:&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;
&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;
&amp;amp;#109;&amp;quot;&amp;gt;&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;
&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;&amp;amp;#109;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在浏览器里面，这段字符串会变成一个可以点击的「address@example.com」链接。&lt;/p&gt;
&lt;p&gt;（这种作法虽然可以混淆不少的机器人，但并无法全部挡下来，不过这样也比什么都不做好些。无论如何，公开你的信箱终究会引来广告信件的。）&lt;/p&gt;
&lt;h3 id=&quot;backslash&quot;&gt;转义字符&lt;/h3&gt;

&lt;p&gt;Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果想要用星号加在文字旁边的方式来做出强调效果（但不用 &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标签），可以在星号的前面加上反斜杠：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\*literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Markdown 支持在下面这些符号前面加上反斜杠来帮助插入普通的符号：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\   反斜杠
`   反引号
*   星号
_   底线
{}  大括号
[]  方括号
()  括号
#   井字号
+    加号
-    减号
.   英文句点
!   惊叹号
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is Simplified Chinese Edition Document of Markdown Syntax.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/images/one_line_crab.png&quot; alt=&quot;one_line_crab&quot; width = &quot;800&quot; height = &quot;558&quot;/&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h1 id=&quot;Markdown-Syntax&quot;&gt;&lt;a href=&quot;#Markdown-Syntax&quot; class=&quot;headerlink&quot; title=&quot;Markdown: Syntax&quot;&gt;&lt;/a&gt;Markdown: Syntax&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#overview&quot;&gt;概述&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#philosophy&quot;&gt;哲学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#html&quot;&gt;行内 HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#autoescape&quot;&gt;特殊字符自动转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#block&quot;&gt;区块元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#p&quot;&gt;段落和换行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#header&quot;&gt;标题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#blockquote&quot;&gt;区块引言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#list&quot;&gt;列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#precode&quot;&gt;程序代码区块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#hr&quot;&gt;分隔线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#span&quot;&gt;区段元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#link&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#em&quot;&gt;强调&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#code&quot;&gt;程序代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#img&quot;&gt;图片&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#misc&quot;&gt;其它&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#backslash&quot;&gt;转义字符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#autolink&quot;&gt;自动链接&lt;/a&gt;
    
    </summary>
    
      <category term="Code" scheme="https://derive.cc/categories/Code/"/>
    
    
      <category term="Markdown" scheme="https://derive.cc/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Container</title>
    <link href="https://derive.cc/2016/05/07/container/"/>
    <id>https://derive.cc/2016/05/07/container/</id>
    <published>2016-05-06T16:00:00.000Z</published>
    <updated>2017-03-20T07:34:26.907Z</updated>
    
    <content type="html">&lt;p&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;br&gt;Standard Template Library(STL标准模板库)=容器+泛型算法(对容器进行操作的算法)&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/images/land_of_pixels.jpg&quot; alt=&quot;land_of_pixels&quot; width=&quot;600&quot; height=&quot;600&quot;&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h2 id=&quot;容器类型&quot;&gt;&lt;a href=&quot;#容器类型&quot; class=&quot;headerlink&quot; title=&quot;容器类型&quot;&gt;&lt;/a&gt;容器类型&lt;/h2&gt;&lt;p&gt;包括vector,list,set,map;&lt;br&gt;其中vector,list属于序列式容器，主要进行迭代操作；&lt;br&gt;set(key),map(key/value)属于关联式容器，可快速寻找元素值；&lt;/p&gt;
&lt;p&gt;List类型：&lt;br&gt;    包含前向指针(foward):寻址上一个对象；&lt;br&gt;      回向指针(backward):寻址下一个对象。&lt;/p&gt;
&lt;h2 id=&quot;实例：单词出现次数查询&quot;&gt;&lt;a href=&quot;#实例：单词出现次数查询&quot; class=&quot;headerlink&quot; title=&quot;实例：单词出现次数查询&quot;&gt;&lt;/a&gt;实例：单词出现次数查询&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initialize_exclusion_set&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;&amp;amp;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process_file&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp;, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;&amp;amp;, ifstream&amp;amp;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;display_word_counter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp;, ofstream&amp;amp;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;user_query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;ifstream &lt;span class=&quot;title&quot;&gt;ifile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;C:\\Users\\zhaow\\Documents\\Notepad++\\C.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;ofstream &lt;span class=&quot;title&quot;&gt;ofile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;C:\\Users\\zhaow\\Documents\\Notepad++\\out.map&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ifile || !ofile)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cerr&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;unable to open file -- bailing out!\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt; exclude_set;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	initialize_exclusion_set(exclude_set);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; word_count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	user_query(word_count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	process_file(word_count, exclude_set, ifile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	display_word_counter(word_count, ofile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initialize_exclusion_set&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt; &amp;amp;exs)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; _excluded_word[&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;the&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;and&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;but&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;that&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;then&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;are&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;been&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;can&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;could&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;did&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;for&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;of&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;had&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;have&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;him&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;his&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;her&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;its&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;is&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;were&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;which&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;when&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;with&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;would&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	exs.insert(_excluded_word, _excluded_word + &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//为set类型赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process_file&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;word_count,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt; &amp;amp;exclude_set,ifstream &amp;amp;ifile)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; word;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (ifile &amp;gt;&amp;gt; word)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (exclude_set.count(word))&lt;span class=&quot;comment&quot;&gt;//判断读入单词是否在剔除列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		word_count[word]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;user_query&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; word_map)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; search_word;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;please enter a word to search: q to quit\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; search_word;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (search_word.size() &amp;amp;&amp;amp; search_word != &lt;span class=&quot;string&quot;&gt;&quot;q&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::const_iterator it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((it = word_map.find(search_word)) != word_map.end())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Found! &quot;&lt;/span&gt; &amp;lt;&amp;lt; it-&amp;gt;first &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; occurs &quot;&lt;/span&gt; &amp;lt;&amp;lt; it-&amp;gt;second &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; times\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; search_word &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; was not found in text.\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\nAnother search?(q to quit)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; search_word;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;display_word_counter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; word_map, ofstream&amp;amp; os)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::const_iterator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		iter = word_map.begin(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		end_it = word_map.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (iter != end_it) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		os &amp;lt;&amp;lt; iter-&amp;gt;first &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt; &amp;lt;&amp;lt; iter-&amp;gt;second &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		++iter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	os &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;meta charset=utf-8&gt;&lt;br&gt;Standard Template Library(STL标准模板库)=容器+泛型算法(对容器进行操作的算法)&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/images/land_of_pixels.jpg&quot; alt=&quot;land_of_pixels&quot; width = &quot;600&quot; height = &quot;600&quot;/&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h2 id=&quot;容器类型&quot;&gt;&lt;a href=&quot;#容器类型&quot; class=&quot;headerlink&quot; title=&quot;容器类型&quot;&gt;&lt;/a&gt;容器类型&lt;/h2&gt;&lt;p&gt;包括vector,list,set,map;&lt;br&gt;其中vector,list属于序列式容器，主要进行迭代操作；&lt;br&gt;set(key),map(key/value)属于关联式容器，可快速寻找元素值；&lt;/p&gt;
&lt;p&gt;List类型：&lt;br&gt;    包含前向指针(foward):寻址上一个对象；&lt;br&gt;      回向指针(backward):寻址下一个对象。&lt;/p&gt;
&lt;h2 id=&quot;实例：单词出现次数查询&quot;&gt;&lt;a href=&quot;#实例：单词出现次数查询&quot; class=&quot;headerlink&quot; title=&quot;实例：单词出现次数查询&quot;&gt;&lt;/a&gt;实例：单词出现次数查询&lt;/h2&gt;
    
    </summary>
    
      <category term="Code" scheme="https://derive.cc/categories/Code/"/>
    
    
      <category term="C++" scheme="https://derive.cc/tags/C/"/>
    
  </entry>
  
</feed>
